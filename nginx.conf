events {}

http {
    server {
        listen 8081;
        server_name _;

        location / {
            # Hantera preflight OPTIONS direkt i Nginx
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin "http://pingvin:8080";
                add_header Access-Control-Allow-Credentials "true";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization";
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }

            # üß† L√§gg in AR-JWT fr√•n cookie i Authorization-header
            set $auth_header "";
            if ($http_cookie ~* "AR-JWT=([^;]+)") {
                set $auth_header "AR-JWT $1";
            }
            proxy_set_header Authorization $auth_header;

            # Proxy till backend
            proxy_pass http://pingvin:8008;

            # D√∂lj original-CORS och CSP-headrar fr√•n backend
            proxy_hide_header Content-Security-Policy;
            proxy_hide_header X-Frame-Options;
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Headers;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Credentials;
            proxy_hide_header Access-Control-Expose-Headers;

            # L√§gg till korrekta CORS + CSP headers
            add_header Content-Security-Policy "frame-ancestors http://pingvin:8080" always;
            add_header X-Frame-Options "ALLOW-FROM http://pingvin:8080" always;

            add_header Access-Control-Allow-Origin "http://pingvin:8080" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        }
    }
}
